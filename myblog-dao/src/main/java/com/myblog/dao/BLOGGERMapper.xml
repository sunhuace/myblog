<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myblog.dao.BLOGGERMapper" >

  <resultMap id="BaseResultMap" type="com.myblog.entity.BLOGGER" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickName" property="nickname" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="imageName" property="imagename" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="ResultMapWithBLOBs" type="com.myblog.entity.BLOGGER" extends="BaseResultMap" >
    <result column="profile" property="profile" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, userName, password, nickName, sign, imageName
  </sql>
  <sql id="Blob_Column_List" >
    profile
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blogger
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_blogger
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.myblog.entity.BLOGGER" >
    insert into t_blogger (id, userName, password, 
      nickName, sign, imageName, 
      profile)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{imagename,jdbcType=VARCHAR}, 
      #{profile,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.myblog.entity.BLOGGER" >
    insert into t_blogger
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickname != null" >
        nickName,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="imagename != null" >
        imageName,
      </if>
      <if test="profile != null" >
        profile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="imagename != null" >
        #{imagename,jdbcType=VARCHAR},
      </if>
      <if test="profile != null" >
        #{profile,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.myblog.entity.BLOGGER" >
    update t_blogger
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="imagename != null" >
        imageName = #{imagename,jdbcType=VARCHAR},
      </if>
      <if test="profile != null" >
        profile = #{profile,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myblog.entity.BLOGGER" >
    update t_blogger
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      imageName = #{imagename,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myblog.entity.BLOGGER" >
    update t_blogger
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      imageName = #{imagename,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
  		select * from t_blogger where userName=#{userName,jdbcType=VARCHAR}
  </select>
  
   <select id="selectBlogger" resultMap="ResultMapWithBLOBs">
  		select * from t_blogger where 1=1
  </select>
  
</mapper>