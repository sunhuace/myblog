<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myblog.dao.BLOGTYPEMapper">

	<resultMap id="BaseResultMap" type="com.myblog.entity.BLOGTYPE">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="typeName" property="typename" jdbcType="VARCHAR" />
		<result column="orderNo" property="orderno" jdbcType="INTEGER" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, typeName, orderNo
	</sql>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_blogtype
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_blogtype
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.myblog.entity.BLOGTYPE">
		insert into t_blogtype (id, typeName, orderNo
		)
		values (#{id,jdbcType=INTEGER}, #{typename,jdbcType=VARCHAR},
		#{orderno,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.myblog.entity.BLOGTYPE">
		insert into t_blogtype
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="typename != null">
				typeName,
			</if>
			<if test="orderno != null">
				orderNo,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="typename != null">
				#{typename,jdbcType=VARCHAR},
			</if>
			<if test="orderno != null">
				#{orderno,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.myblog.entity.BLOGTYPE">
		update t_blogtype
		<set>
			<if test="typename != null">
				typeName = #{typename,jdbcType=VARCHAR},
			</if>
			<if test="orderno != null">
				orderNo = #{orderno,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.myblog.entity.BLOGTYPE">
		update t_blogtype
		set typeName = #{typename,jdbcType=VARCHAR},
		orderNo = #{orderno,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="listBlogType" resultMap="BaseResultMap">
		select tbp.id, tbp.typeName,COUNT(tb.id) AS blogCount
		from t_blogtype tbp LEFT JOIN t_blog tb
		on tbp.id = tb.typeId GROUP BY tbp.typeName ORDER BY tbp.orderNo
	</select>
	
	<select id="listType" parameterType="java.util.Map" resultMap="BaseResultMap">
  		select * from t_blogtype
  		<where>
			<if test="page!=null and pageSize!=null">
				limit #{page}, #{pageSize}
			</if>
		</where>
  	</select>
  	
  	<select id="getBlogTypeToal" parameterType="java.util.Map" resultType="java.lang.Long">
  		select count(*) from t_blogtype
  	</select>
</mapper>